##map plots of scbi forestGEo site
#clear environment
rm(list = ls())
#load libraries
library(here)
library(data.table)
library(dplyr)
library(ggplot2)
library(sf)
#quadrat map
quadrats <- read_sf("data/20m_grid/20m_grid.shp")
ggplot() + geom_sf(data = quadrats)
##load census data
census2023 <- read.csv("data/census data/scbi.stem4.csv")
census2018 <- read.csv("data/census data/old census data/scbi.stem3.csv")
census2013 <- read.csv("data/census data/old census data/scbi.stem2.csv")
census2008 <- read.csv("data/census data/old census data/scbi.stem1.csv")
#read in species table
spTable <- read.csv("https://raw.githubusercontent.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/master/species_lists/Tree%20ecology/SCBI_ForestGEO_sp_ecology.csv")
#merge census data with sp table LOSING ROWS OF UNKNOWN SP, FIX
census2023 <- merge(census2023, spTable, by.x = "species", by.y = "spcode", all.x = T)
census2018 <- merge(census2018, spTable,  by.x = "sp", by.y = "spcode", all.x = T)
census2013 <- merge(census2013, spTable,  by.x = "sp", by.y = "spcode", all.x = T)
census2008 <- merge(census2008, spTable,  by.x = "sp", by.y = "spcode", all.x = T)
####view sp not included in species table
###setdiff(census2013$sp, spTable$spcode)
###
####create missing sp table and input canopy information
###missing_sp <- data.frame(spcode = setdiff(census2013$sp, spTable$spcode), canopy_position = c("1","1","0","1", "1","0","1","1", "0"))
###census2023[is.na(census2023$canopy_position), ]
#create canopy trees column
census2023$is_canopy <- ifelse(census2023$canopy_position == 'canopy', 1, #this makes canopy trees = 1 and non-canopy trees = 0
ifelse(census2023$canopy_position == 'canopy, emergent', 1, 0))
census2018$is_canopy <- ifelse(census2018$canopy_position == 'canopy', 1,
ifelse(census2018$canopy_position == 'canopy, emergent', 1, 0))
census2013$is_canopy <- ifelse(census2013$canopy_position == 'canopy', 1,
ifelse(census2013$canopy_position == 'canopy, emergent', 1, 0))
census2008$is_canopy <- ifelse(census2008$canopy_position == 'canopy', 1,
ifelse(census2008$canopy_position == 'canopy, emergent', 1, 0))
#convert new column to numeric for map
census2023$is_canopy <- as.numeric(census2023$is_canopy)
census2018$is_canopy <- as.numeric(census2018$is_canopy)
census2013$is_canopy <- as.numeric(census2013$is_canopy)
census2008$is_canopy <- as.numeric(census2008$is_canopy)
####check new attribute
###check <- select(census2023, species, canopy_position, is_canopy, quadrat)
###check <- select(census2008, sp, canopy_position, is_canopy)
#subset census by trees under 12.7 cm
understory2023 <- subset(census2023, dbh_current <= 127) #dbh_current is in mm
understory2018 <- subset(census2018, dbh <= 127)
understory2013 <- subset(census2013, dbh <= 127)
understory2008 <- subset(census2008, dbh <= 127)
####check subset
###check <- select(census2023, spcode, canopy_position, dbh_current)
###check <- select(census2013, spcode, canopy_position, dbh)
#count story by quad
quad2023 <- understory2023 %>%
group_by(quadrat) %>%
summarize(
canopy_count2023 = sum(is_canopy == 1, na.rm = T),
non_canopy_count2023 = sum(is_canopy == 0, na.rm = T)
) %>%
mutate(canopy_prop2023 = canopy_count2023 / ( canopy_count2023 + non_canopy_count2023))
quad2018 <- understory2018 %>%
group_by(quadrat) %>%
summarize(
canopy_count2018 = sum(is_canopy == 1, na.rm = T),
non_canopy_count2018 = sum(is_canopy == 0,  na.rm = T)
) %>%
mutate(canopy_prop2018 = canopy_count2018 / ( canopy_count2018 + non_canopy_count2018))
quad2013 <- understory2013 %>%
group_by(quadrat) %>%
summarize(
canopy_count2013 = sum(is_canopy == 1, na.rm = T),
non_canopy_count2013 = sum(is_canopy == 0,  na.rm = T)
) %>%
mutate(canopy_prop2013 = canopy_count2013 / ( canopy_count2013 + non_canopy_count2013))
quad2008 <- understory2008 %>%
group_by(quadrat) %>%
summarize(
canopy_count2008 = sum(is_canopy == 1, na.rm = T),
non_canopy_count2008 = sum(is_canopy == 0,  na.rm = T)
) %>%
mutate(canopy_prop2008 = canopy_count2008 / ( canopy_count2008 + non_canopy_count2008))
#expand 2023 map to all finished columns, letting unfinshed quads be NA AND join tables
proportion_difference <- quad2013 %>%
left_join(quad2023, by = "quadrat")  %>%
left_join(quad2018, by = "quadrat") %>%
left_join(quad2008, by = "quadrat") %>%
mutate(prop_difference_1323 = (canopy_prop2023 - canopy_prop2013) *100, #calculate difference of canopy proportion for 10 year change
prop_difference_0823 = (canopy_prop2023 - canopy_prop2008) *100,) #calculate difference of canopy proportion for 15 year change
####calculate difference of canopy proportion from 2013 to 2023
###proportion_difference$prop_difference <- ((proportion_difference$canopy_prop2023 - proportion_difference$canopy_prop2008)*100)
#create shapefile to merge quadrat data and percent change
displayChange <- merge(quadrats, proportion_difference, by.x = "PLOT", by.y = "quadrat")
###############################################################################################################################################
#maps with min and max thresholds
#######create colors for diverging color ramp
######colors <- c("red", "white", "blue")
###
####set threashold
###uth <- 50 #upper threshold
###lth <- -50 #lower threshold
###
####plot 10 year change using ggplot
###
###ggplot() +
###  geom_sf(data = displayChange[displayChange$prop_difference_1323 <= lth,], fill = "darkblue") +
###  geom_sf(data = displayChange[displayChange$prop_difference_1323 >= uth,], fill = "darkred") +
###  geom_sf(data = displayChange[displayChange$prop_difference_1323 < uth & displayChange$prop_difference_1323 > lth, ], aes(fill = prop_difference_1323)) +
###  scale_fill_gradient2(low = "red", mid = "white", high = "blue", midpoint = 0,  name = "Percent Change", limits = c(lth, uth)) +
###  geom_sf(data = st_centroid(displayChange[displayChange$prop_difference_1323 <= lth | displayChange$prop_difference_1323 >= uth,]), col = "white") +
###  labs(title = "Change of Canopy Recruits of 10 Years :)")
###
####plot 15 year change using ggplot
###
###ggplot() +
###  geom_sf(data = displayChange[displayChange$prop_difference_0823 <= lth,], fill = "darkblue") +
###  geom_sf(data = displayChange[displayChange$prop_difference_0823 >= uth,], fill = "darkred") +
###  geom_sf(data = displayChange[displayChange$prop_difference_0823 < uth & displayChange$prop_difference_0823 > lth, ], aes(fill = prop_difference_0823)) +
###  geom_sf( show.legend = TRUE) +
###  scale_fill_gradient2(low = "red", mid = "white", high = "blue", midpoint = 0,  name = "Percent Change", limits = c(lth, uth)) +
###  geom_sf(data = st_centroid(displayChange[displayChange$prop_difference_0823 <= lth | displayChange$prop_difference_0823 >= uth,]), col = "white", show.legend = TRUE) +
###  labs(title = "Change of Canopy Recruits of 15 Years :)")
###############################################################################################################################################
#cut breaks in prop_difference for 15 years
displayChange$prop_difference_0823_cuts <- cut(displayChange$prop_difference_0823, c(-100, -75, -50, -25, 0, 25, 50, 75, 100))
#create column for filtering quads with little to no stems in understory
displayChange$noStem <- displayChange$canopy_count2023 + displayChange$non_canopy_count2023
#create plot based on assigned breaks
ggplot() +
geom_sf(data = displayChange, aes(fill = prop_difference_0823_cuts)) +
geom_sf(data = subset.data.frame(displayChange, noStem <= 7) , fill = "black") +
scale_fill_brewer(name = "Percent Change",  palette = "RdBu") +
labs(title = "Change of Canopy Recruits in ForestGEO SCBI")
#ggsave("figure 5.png", width = 5, height = 7, units = "in", dpi = 300, path = "doc/")
##############################################################################################################################################
#create plot based on assigned breaks
ggplot() +
geom_sf(data = displayChange, aes(fill = prop_difference_0823_cuts)) +
geom_sf(data = subset.data.frame(displayChange, noStem <= 7) , fill = "black") +
scale_fill_brewer(name = "Percent Change",  palette = "RdBu") +
labs(title = "Change of Canopy Recruits in ForestGEO SCBI")
#clear environment
rm(list = ls())
#load libraries
library(here)
library(data.table)
library(dplyr)
library(ggplot2)
library(sf)
#quadrat map
quadrats <- read_sf("data/20m_grid/20m_grid.shp")
##calculating mortality fluxes accounting for 2023 data being different
##end goal: biomass fluxes per year
##started november 10, 2023 by Iris Kennedy
library(tidyverse)
library(ggplot2)
library(allodb)#allometry package
getwd()#check which working directory you are in
Census2023<- read.csv("data/census_data/scbi.stem4.csv")#loading in current census data, note this is from my local computer, you will have to change the filepath
Census2008 <- load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.stem1.rdata"))
Census2013 <- load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.stem2.rdata"))
Census2018 <-load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.stem3.rdata"))
#load in libraries
library(allodb)
#Read in data from past censuses and the species table
load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.stem1.rdata"))
load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.stem2.rdata"))
load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.stem3.rdata"))
load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.spptable.rdata"))
#Rename the data
census2008 <- scbi.stem1
census2013 <- scbi.stem2
census2018 <- scbi.stem3
speciesTable <- scbi.spptable
#Read in data from 2023
census2023<- read.csv("data/census_data/scbi.stem4.csv")
#Combine the census data and species list
spCensus2008 <- merge(census2008, speciesTable, by ="sp")
spCensus2013 <- merge(census2013, speciesTable, by ="sp")
spCensus2018 <- merge(census2018, speciesTable, by ="sp")
spCensus2023 <- merge(census2023, speciesTable, by ="sp")
#clear environment
rm(list = ls())
#load in libraries
library(allodb)
library(ggplot2)
#Read in data from past censuses and the species table
load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.stem1.rdata"))
load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.stem2.rdata"))
load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.stem3.rdata"))
load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.spptable.rdata"))
#Rename the data
census2008 <- scbi.stem1
census2013 <- scbi.stem2
census2018 <- scbi.stem3
speciesTable <- scbi.spptable
census2023 <- read.csv(url("https://raw.githubusercontent.com/SCBI-ForestGEO/2023census/main/processed_data/scbi.stem4.csv"))
#Combine the census data and species list
spCensus2008 <- merge(census2008, speciesTable, by ="sp")
spCensus2013 <- merge(census2013, speciesTable, by ="sp")
spCensus2018 <- merge(census2018, speciesTable, by ="sp")
spCensus2023 <- merge(census2023, speciesTable, by ="sp")
#create latxlong for the plot
latlong <- c(-78.1454, 38.8935)
length(unique(spCensus2013$quadrat))
length(unique(spCensus2023$quadrat))
spCensus2008$Calculated_ABG <- get_biomass(dbh = as.numeric(spCensus2008$dbh)/10, genus = spCensus2008$Genus, species = spCensus2008$Species, coords = latlong)
spCensus2013$Calculated_ABG <- get_biomass(dbh = as.numeric(spCensus2013$dbh)/10, genus = spCensus2013$Genus, species = spCensus2013$Species, coords = latlong)
spCensus2018$Calculated_ABG <- get_biomass(dbh = as.numeric(spCensus2018$dbh)/10, genus = spCensus2018$Genus, species = spCensus2018$Species, coords = latlong)
spCensus2023$Calculated_ABG <- get_biomass(dbh = as.numeric(spCensus2023$dbh_current)/10, genus = spCensus2023$Genus, species = spCensus2023$Species, coords = latlong)
View(spCensus2008)
stock2008 <- sum(spCensus2008$Calculated_ABG, na.rm = TRUE)/25.6 #sum of total kg/hectare
stock2013 <- sum(spCensus2013$Calculated_ABG, na.rm = TRUE)/25.6
stock2018 <- sum(spCensus2018$Calculated_ABG, na.rm = TRUE)/25.6
stock2023 <- sum(spCensus2023$Calculated_ABG, na.rm = TRUE)/25.6
year <- c(2008, 2013, 2018, 2023)
all_stocks <- c(stock2008, stock2013, stock2018, stock2023)
figure2_agb <- data.frame(y = year,  x = all_stocks)
View(figure2_agb)
ggplot(figure2_agb, aes(y=all_stocks, x=year)) +
geom_line() +
geom_point() +
labs(title = "Carbon Stock Per Year", xlab = "Carbon Stock (kg/ha", ylab = "Year of Cencus")
ggplot(figure2_agb, aes(y=all_stocks, x=year)) +
geom_step() +
geom_point() +
labs(title = "Carbon Stock Per Year", xlab = "Carbon Stock (kg/ha)", ylab = "Year of Cencus")
ggplot(figure2_agb, aes(y=all_stocks, x=year)) +
geom_line() +
geom_point() +
labs(title = "Carbon Stock Per Year", xlab = "Carbon Stock (kg/ha)", ylab = "Year of Cencus")
ggplot(figure2_agb, aes(y=all_stocks, x=year)) +
geom_line() +
geom_point() +
labs(title = "Carbon Stock Per Year") +
theme(legend.position="top")
ggplot(figure2_agb, aes(y=all_stocks, x=year)) +
geom_line() +
geom_point() +
labs(title = "Carbon Stock Per Year", x = "Carbon Stock (mg/ha)", y = "Year") +
theme(legend.position="top")
ggplot(figure2_agb, aes(y=all_stocks, x=year)) +
geom_line() +
geom_point() +
labs(title = "Carbon Stock Per Year", y = "Carbon Stock (mg/ha)", x = "Year") +
theme(legend.position="top")
theme_update(plot.title = element_text(hjust = 0.5))
ggplot(figure2_agb, aes(y=all_stocks, x=year)) +
geom_line() +
geom_point() +
labs(title = "Carbon Stock Per Year", y = "Carbon Stock (mg/ha)", x = "Year") +
theme(legend.position="top")
#Define finished quadrats
Finished_quadrats <- unique(spCensus2023$quadrat)
#Finding the physical amount of space we measured
Hectares_measured <- length(Finished_quadrats)*20*20/10000
Census_2018_Finished
useCensus2008 <- spCensus2008
useCensus2013 <- spCensus2013
useCensus2018 <- spCensus2018
useCensus2023 <- spCensus2023
#calculate total biomass of cencus year by each stem
#biomass_census <- get_biomass(dbh = as.numeric(Census_Year_Complete$dbh)/10, genus = Census_Year_Complete$Genus, species = Census_Year_Complete$Species, coords = latlong)
useCensus2008$Calculated_ABG <- get_biomass(dbh = as.numeric(useCensus2008$dbh)/10, genus = useCensus2008$Genus, species = useCensus2008$Species, coords = latlong)
useCensus2013$Calculated_ABG <- get_biomass(dbh = as.numeric(useCensus2013$dbh)/10, genus = useCensus2013$Genus, species = useCensus2013$Species, coords = latlong)
useCensus2018$Calculated_ABG <- get_biomass(dbh = as.numeric(useCensus2018$dbh)/10, genus = useCensus2018$Genus, species = useCensus2018$Species, coords = latlong)
useCensus2023$Calculated_ABG <- get_biomass(dbh = as.numeric(useCensus2023$dbh_current)/10, genus = useCensus2023$Genus, species = useCensus2023$Species, coords = latlong)
length(unique(useCensus2008$quadrat))
length(unique(useCensus2013$quadrat))
length(unique(useCensus2018$quadrat))
length(unique(useCensus2023$quadrat))
#Subset the 2008 quadrats by ones that are finished in 2023
Census_2008_Finished <- subset(spCensus2008, spCensus2008$quadrat %in% Finished_quadrats)
length(unique(Census_2008_Finished$quadrat))
View(Census_2008_Finished)
Census_2008_Finished <- subset.data.frame(spCensus2008, spCensus2008$quadrat %in% Finished_quadrats)
length(unique(Census_2008_Finished))
View(Census_2008_Finished)
unique(Census_2008_Finished)
#Combine the census data and species list
spCensus2008 <- merge(census2008, speciesTable, by ="sp")
Census_2008_Finished <- subset.data.frame(spCensus2008, Finished_quadrats %in% spCensus2008$quadrat)
length(unique(Census_2008_Finished))
#Read in data from past censuses and the species table
load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.stem1.rdata"))
load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.stem2.rdata"))
load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.stem3.rdata"))
load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.spptable.rdata"))
#Rename the data
census2008 <- scbi.stem1
census2013 <- scbi.stem2
census2018 <- scbi.stem3
speciesTable <- scbi.spptable
census2023 <- read.csv(url("https://raw.githubusercontent.com/SCBI-ForestGEO/2023census/main/processed_data/scbi.stem4.csv"))
length(union(census2023$quadrat))
length(unique(census2023$quadrat))
#Combine the census data and species list
spCensus2008 <- merge(census2008, speciesTable, by ="sp")
spCensus2013 <- merge(census2013, speciesTable, by ="sp")
spCensus2018 <- merge(census2018, speciesTable, by ="sp")
spCensus2023 <- merge(census2023, speciesTable, by ="sp")
length(unique(spCensus2023))
length(unique(spCensus2023$quadrat))
length(unique(spCensus2018$quadrat))
#create latxlong for the plot
latlong <- c(-78.1454, 38.8935)
#Define finished quadrats
Finished_quadrats <- unique(spCensus2023$quadrat)
Census_2008_Finished <- subset.data.frame(spCensus2008, Finished_quadrats %in% spCensus2008$quadrat)
length(unique(Census_2008_Finished$quadrat))
#Subset the 2013 quadrats by ones that are finished in 2023
Census_2013_Finished <- subset(spCensus2013, Finished_quadrats %in% spCensus2013$quadrat)
length(unique(Census_2013_Finished))
length(unique(Census_2013_Finished$quadrat))
#Subset the 2018 qudrats by the ones that are finished in 2023
Census_2018_Finished <- subset(spCensus2018, Finished_quadrats %in% spCensus2018$quadrat)
#rename 2023 census to match names of others
Census_2023_Finished <- spCensus2023
useCensus2008 <- Census_2008_Finished
useCensus2013 <- Census_2013_Finished
useCensus2018 <- Census_2018_Finished
useCensus2023 <- Census_2023_Finished
length(unique(useCensus2008))
length(unique(useCensus2008$quadrat))
length(unique(useCensus2013$quadrat))
length(unique(useCensus2018$quadrat))
length(unique(useCensus2023$quadrat))
#Subset the 2008 quadrats by ones that are finished in 2023
Census_2008_Finished <- subset(spCensus2008, Finished_quadrats %in% spCensus2008$quadrat)
length(unique(Census_2008_Finished))
length(unique(Census_2008_Finished$quadrat))
library(dyplr)
library(dplyr)
Census_2008_Finished <- filter(spCensus2008, quadrat %in% Finished_quadrats)
length(unique(Census_2008_Finished))
length(unique(Census_2008_Finished$quadrat))
Census_2008_Finished <- filter(spCensus2008, Finished_quadrats %in% quadrats)
Census_2008_Finished <- filter(spCensus2008, Finished_quadrats %in% spCensus2008$quadrat)
Census_2008_Finished <- filter(spCensus2008, spCensus2008 %in% Finished_quadrats)
Census_2008_Finished <- spCensus2008$quadrat%in%Finished_quadrats
Census_2008_Finished <- spCensus2008[Finished_quadrats, ]
View(Census_2008_Finished)
length(unique(Census_2008_Finished$quadrat))
census<- read.csv("data/census_data/scbi.stem4.csv")#loading in current census data
load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.stem1.rdata"))
load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.stem2.rdata"))
load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.stem3.rdata"))
Census2008 <- scbi.stem1
Census2013 <- scbi.stem2
Census2018 <- scbi.stem3
completeQuadrats <- unique(census$quadrat)
hectaresMeasured <- length(completeQuadrats)*20*20/10000
Census2008 <- subset(Census2008, Census2008$quadrat%in%completeQuadrats)
Census2013 <- subset(Census2013, Census2013$quadrat%in%completeQuadrats)
Census2018 <- subset(Census2018, Census2018$quadrat%in%completeQuadrats)
census<- read.csv("data/census_data/scbi.stem4.csv")#loading in current census data
