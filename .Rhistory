c(.,"Other canopy sp.")
f2 <-  wp_recr  %>%
group_by(plot_sp,canopy_position)  %>%
summarize(n_stems = sum(n_stems))  %>%
filter(canopy_position %in% "understory")  %>%
arrange(desc(n_stems))  %>%
filter(plot_sp != "Other understory sp.")  %>%
pull(plot_sp)  %>%
c(.,"Other understory sp.")
plotdf <- plt_recr_slice #%>%
fig5 <- ggplot(plotdf, aes(x = factor(plot_sp, levels = c(f1,f2)), y = n_stems,fill = as.ordered(Group), group = Group)) +
facet_wrap(~canopy_position, labeller = labeller(canopy_position = c("canopy" = "Canopy", "understory" = "Understory")), scales = "free") +
geom_bar(position = "dodge",stat = "identity", col= "black") +
theme_bw() +
ylab(expression(atop("Recruitment", (n~Ha^-1~Yr^-1)))) +
xlab("Species") +
guides(alpha = "none", fill = guide_legend(override.aes = list(size = 8))) +
#scale_x_discrete(labels=scientific_name) +
scale_fill_manual(values = c("#E7BC40","#C7622B","#750000","#7e937f"), labels = c("Low deer, low vulnerable species","High deer, low vulnerable species", "High deer, high vulnerable species", "Plot"), name = "") +
theme(axis.text = element_text(size = 14, angle = 45, hjust = 1),
axis.title = element_text(size = 16),
panel.grid.major.x = element_blank(),
strip.text = element_text(size = 14,
face ="bold"),
legend.position = c(.2,.9),
legend.text = element_text(size = 14),
legend.background = element_blank()
)
fig5
##### I - Identify top species (by mortality flux) & reformat data for plotting #####
top_sp <- allmort_awm  %>%
#mutate(sp = if_else(sp %in% c("caco","cagl","caovl","cato"), "Hickory spp.",sp))  %>%
ungroup()  %>%
group_by(sp)  %>%
mutate(abgmort = if_else(is.na(abgmort),0, abgmort))  %>%
summarize(abgmort = sum(abgmort))  %>%
arrange(desc(abgmort))  %>%
slice_head(n = 7)
allspyr <- allmort_awm  %>%
expand(sp,survey_year)
mort_plot_df <- allmort_awm  %>%
right_join(allspyr)  %>%
mutate(abgmort = if_else(is.na(abgmort),0, abgmort))  %>%
mutate(sp = if_else(sp %in% c("caco","cagl","caovl","cato"), "Hickory spp.",sp))  %>%
mutate(plotspecies = if_else(sp %in% top_sp$sp,sp, "Other"))  %>%
group_by(survey_year, plotspecies)  %>%
summarize(mort_woody = sum(abgmort))  %>%
mutate(plotspecies = factor(plotspecies, levels = c(top_sp$sp, "Other")))
mort_plot_df$plotspecies <- gsub('fram', 'Fraxinus americana', mort_plot_df$plotspecies)
mort_plot_df$plotspecies <- gsub('Hickory spp.', 'Carya spp.', mort_plot_df$plotspecies)
mort_plot_df$plotspecies <- gsub('litu', 'Liriodendron tulipifera', mort_plot_df$plotspecies)
mort_plot_df$plotspecies <- gsub('qual', 'Quercus alba', mort_plot_df$plotspecies)
mort_plot_df$plotspecies <- gsub('qupr', 'Quercus prinus', mort_plot_df$plotspecies)
mort_plot_df$plotspecies <- gsub('quru', 'Quercus rubra', mort_plot_df$plotspecies)
mort_plot_df$plotspecies <- gsub('quve', 'Quercus velutina', mort_plot_df$plotspecies)
facet_order <- c("Fraxinus americana", "Quercus velutina", "Quercus rubra",
"Quercus prinus", "Quercus alba", "Liriodendron tulipifera", "Other")
facet_years <- c(2013, 2023)
barp <- ggplot(mort_plot_df, aes(x = survey_year, y = mort_woody, fill = as.ordered(survey_year))) +
facet_grid(~ factor(plotspecies, levels = facet_order)) +
#labeller = as_labeller(custom_labels)
scale_x_continuous(breaks = facet_years) +
geom_bar(stat = "identity" , position = "dodge", col = "grey20") +
theme_bw() +
#scale_fill_viridis_d()  +
scale_fill_grey() +
ylab(expression("Aboveground Woody Mortality"~(Mg~C~ha^-1~yr^-1))) +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 16),
axis.title.x = element_blank(),
panel.spacing.x = unit(0, "lines"),
#strip.background = element_blank(),
strip.text = element_text(size = 9.5,
face = "italic"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "none")
barp
ggsave(barp,filename = "doc/display/Figure4.jpeg", units = "in",
height = 6, width = 10, dpi = 300)
woodyfluxes <- read.csv("data/processed_data/WoodyFluxes.csv") %>%
mutate(quadrat = sprintf("%04d", quadrat))  %>%
select(-X)
grouped_quadrats <- read.csv("data/grouped_quadrats.csv") %>%
mutate(quadrat = sprintf("%04d", quadrat))  %>%
select(-X)
group_trends <- woodyfluxes  %>%
left_join(grouped_quadrats, by = c("quadrat" = "quadrat"))  %>%
group_by(Group, Census)  %>%
summarize(qc = n(),
AWP = sum(AWP) / qc,
AWM = (sum(AWM) / qc ),
AWR = sum(AWR) / qc,
NetFlux = sum(NetFlux) / qc) %>%
mutate(Group = as.character(Group))
tot_trends <- woodyfluxes  %>%
group_by(Census)  %>%
summarize(qc = n(),
AWP = sum(AWP) / qc,
AWM = (sum(AWM) / qc ),
AWR = sum(AWR) / qc,
NetFlux = sum(NetFlux) / qc)  %>%
mutate(Group = "Whole Plot")
fig3_woodyfluxes <- group_trends  %>%
bind_rows(tot_trends)  %>%
drop_na()   %>%
pivot_longer(c(AWP, AWM, AWR, NetFlux), names_to = c("Flux"),values_to = "MgC_Yr_Ha")  %>%
mutate(Flux = factor(Flux, levels = c("NetFlux","AWM","AWP","AWR")),
lwd_col = if_else(Group %in% c("Whole Plot"), 5, 3),  #0.5, 1.2
cex_col = if_else(Group %in% c("Whole Plot"), 5, 3),
cens_int = case_when(Census == 2 ~ "2008-\n2013",
Census == 3 ~ "2013-\n2018",
Census == 4 ~ "2018-\n2023")
)
colz <- c("#E7BC40","#C7622B", "#750000","#7e937f")
flux_names <- as_labeller(c("AWM" = "Aboveground Woody Mortality",
"AWP" = "Aboveground Woody Growth",
"AWR" = "Aboveground Woody Recruitment",
"NetFlux" = "Net Biomass Change"))
fig3 <- ggplot(fig3_woodyfluxes, aes(x = as.ordered(cens_int), y = MgC_Yr_Ha, group = Group, col = Group)) +
facet_wrap(~Flux, scales = "free_y", labeller = flux_names) +
geom_line(data = fig3_woodyfluxes  %>% filter(Group %in% c("Whole Plot")), lwd = 1.5, lty = 1) +
geom_line(data = fig3_woodyfluxes %>% filter(Group %in% c("2", "3")), lwd = 1.2, lty = 5) +
geom_line(data = fig3_woodyfluxes %>% filter(Group %in% c("1")), lwd = 1.2, lty = 3) +
geom_point(data = fig3_woodyfluxes %>% filter(Group %in% c("1")), pch = 17, cex = 3, fill = "#E7BC40") +
geom_point(data = fig3_woodyfluxes %>% filter(Group %in% c("2")), pch = 17, cex = 3, fill = "#C7622B") +
geom_point(data = fig3_woodyfluxes %>% filter(Group %in% c("3")), pch = 22, cex = 3, fill = "#750000") +
geom_point (data = fig3_woodyfluxes %>% filter(Group %in% c("Whole Plot")), pch = 16, cex = 3, fill = "#7e937f") +
geom_hline(data = fig3_woodyfluxes  %>% filter(Flux %in% c("NetFlux")),aes(yintercept = 0), lty = "dashed") +
scale_color_manual(name = element_blank(),labels = c("Low deer, low canopy vulnerability","High deer, low canopy vulnerability", "High deer, high canopy vulnerability", "Whole Plot"), values = colz, guide = guide_legend(nrow = 2)) +
labs(y = expression("Carbon Flux"~(Mg~C~ha^-1~yr^-1)), x = "Census") +
theme_bw() +
theme(legend.position = "top",
legend.text = element_text(size = 14),
legend.background = element_blank(),
strip.text = element_text(size = 12),
axis.text.x = element_text(size = 18, margin = margin(t = .15,r = 0, b = .05,l = 0,unit = "in"), angle = 45, hjust = 1),
axis.text.y = element_text(size = 18, margin = margin(t = 0,r = .08, b = 0,l = 0, unit = "in")),
axis.title = element_text(size = 20))
fig3
ggsave(fig3,filename = "doc/display/Figure3.jpeg", units = "in",
height = 8, width = 10, dpi = 300)
ggsave(fig3,filename = "doc/display/Figure3.jpeg", units = "in",
height = 8, width = 10, dpi = 300)
library(allodb)
library(tidyverse)
#Read in data from all censuses and the species table
grouped_quadrats <- read.csv("data/grouped_quadrats.csv") %>%
mutate(quadrat = sprintf("%04d", quadrat))
load("data/census_data/scbi.stem1.corrected.rdata")
load("data/census_data/scbi.stem2.corrected.rdata")
load("data/census_data/scbi.stem3.corrected.rdata")
load("data/census_data/scbi.stem4.corrected.rdata")
load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.spptable.rdata"))
#Rename the data
census2008 <- scbi.stem1.corrected
census2013 <- scbi.stem2.corrected
census2018 <- scbi.stem3.corrected
census2023 <- scbi.stem4.corrected
speciesTable <- scbi.spptable
#Combine the census data and species list
Census_2008_Finished <- merge(census2008, speciesTable, by = "sp")
Census_2013_Finished <- merge(census2013, speciesTable, by = "sp")
Census_2018_Finished <- merge(census2018, speciesTable, by = "sp")
Census_2023_Finished <- merge(census2023, speciesTable, by = "sp")
#create latxlong & area for the plot
latlong <- c(-78.1454, 38.8935)
Hectares_measured <- 25.6
#######################################################################################################################################
#subset to alive stems
useCensus2008 <- Census_2008_Finished  %>% filter(DFstatus %in% "alive")
useCensus2013 <- Census_2013_Finished  %>% filter(DFstatus %in% "alive")
useCensus2018 <- Census_2018_Finished  %>% filter(DFstatus %in% "alive")
useCensus2023 <- Census_2023_Finished  %>% filter(DFstatus %in% "alive")
#calculate total biomass of census year by each stem
useCensus2008$Calculated_ABG <- get_biomass(dbh = as.numeric(useCensus2008$dbh)/10, genus = useCensus2008$Genus, species = useCensus2008$Species, coords = latlong)
useCensus2013$Calculated_ABG <- get_biomass(dbh = as.numeric(useCensus2013$dbh)/10, genus = useCensus2013$Genus, species = useCensus2013$Species, coords = latlong)
useCensus2018$Calculated_ABG <- get_biomass(dbh = as.numeric(useCensus2018$dbh)/10, genus = useCensus2018$Genus, species = useCensus2018$Species, coords = latlong)
useCensus2023$Calculated_ABG <- get_biomass(dbh = as.numeric(useCensus2023$dbh)/10, genus = useCensus2023$Genus, species = useCensus2023$Species, coords = latlong)
calc_quadrat_abg <- function(abg_df, year){
outdf <- abg_df  %>%
group_by(quadrat)  %>%
summarize(Abg_C_Mg = sum(Calculated_ABG,na.rm = T)/1000 * .47,
Abg_Mg = sum(Calculated_ABG,na.rm = T)/1000)  %>%
left_join(grouped_quadrats  %>% select(quadrat,Group))  %>%
mutate(Year = year)
return(outdf)
}
quadrat_abg_2008 <- calc_quadrat_abg(useCensus2008,2008)
quadrat_abg_2013 <- calc_quadrat_abg(useCensus2013,2013)
quadrat_abg_2018 <- calc_quadrat_abg(useCensus2018,2018)
quadrat_abg_2023 <- calc_quadrat_abg(useCensus2023,2023)
group_trends <- quadrat_abg_2008  %>%
bind_rows(quadrat_abg_2013,quadrat_abg_2018,quadrat_abg_2023)  %>%
group_by(Year,Group)  %>%
summarize(n_quads = n(),Abg_C_Mg_Ha = sum(Abg_C_Mg) / ((400 * n_quads)/10000),
Abg_Mg_Ha = sum(Abg_Mg) / ((400 * n_quads)/10000))  %>%
drop_na()  %>%
mutate(Group = as.character(Group))
tot_trends <- quadrat_abg_2008  %>%
bind_rows(quadrat_abg_2013,quadrat_abg_2018,quadrat_abg_2023)  %>%
group_by(Year)  %>%
summarize(n_quads = n(),Abg_C_Mg_Ha = sum(Abg_C_Mg) / ((400 * n_quads)/10000),
Abg_Mg_Ha = sum(Abg_Mg) / ((400 * n_quads)/10000))  %>%
mutate(Group = "Whole Plot")
figure2_agb <- group_trends  %>%
bind_rows(tot_trends)
colz <- c("#E7BC40","#C7622B", "#750000","#7e937f")
fig2 <- ggplot(figure2_agb, aes(y=Abg_C_Mg_Ha, x=Year,
group = Group, col = Group)) +
geom_line(aes(linetype = Group, linewidth = Group)) +
geom_point(aes(shape = Group, size = Group)) +
scale_x_continuous(breaks = c(2008, 2013,2018, 2023), labels = c("2008","2013","2018","2023"),
minor_breaks = c())+
scale_color_manual(name = element_blank(),labels = c("Low deer, low canopy vulnerability",
"High deer, low canopy vulnerability",
"High deer, high canopy vulnerability",
"Whole plot"),values = colz) +
scale_linetype_manual(values = c("dotted", "longdash", "longdash", "solid"), guide = "none") +
scale_linewidth_manual(values = c(1.2, 1.2, 1.2, 1.5), guide = "none") +
scale_size_manual(values = c(3, 3, 3, 3), guide = "none") +
scale_shape_manual(values = c("triangle", "triangle", "square", "circle"), guide = "none") +
labs(y = expression("Aboveground Biomass" ~ (Mg~C~ha^-1)), x = "Year") +
theme_bw() +
theme(legend.position = c(.38,.175),
legend.text = element_text(size = 18),
legend.background = element_blank(),
axis.text.x = element_text(size = 18, margin = margin(t = .15,r = 0, b = .05,l = 0,unit = "in")),
axis.text.y = element_text(size = 18, margin = margin(t = 0,r = .08, b = 0,l = 0, unit = "in")),
axis.title = element_text(size = 20))
fig2
library(allodb)
library(tidyverse)
#Read in data from all censuses and the species table
grouped_quadrats <- read.csv("data/grouped_quadrats.csv") %>%
mutate(quadrat = sprintf("%04d", quadrat))
load("data/census_data/scbi.stem1.corrected.rdata")
load("data/census_data/scbi.stem2.corrected.rdata")
load("data/census_data/scbi.stem3.corrected.rdata")
load("data/census_data/scbi.stem4.corrected.rdata")
load(url("https://github.com/SCBI-ForestGEO/SCBI-ForestGEO-Data/raw/master/tree_main_census/data/scbi.spptable.rdata"))
#Rename the data
census2008 <- scbi.stem1.corrected
census2013 <- scbi.stem2.corrected
census2018 <- scbi.stem3.corrected
census2023 <- scbi.stem4.corrected
speciesTable <- scbi.spptable
#Combine the census data and species list
Census_2008_Finished <- merge(census2008, speciesTable, by = "sp")
Census_2013_Finished <- merge(census2013, speciesTable, by = "sp")
Census_2018_Finished <- merge(census2018, speciesTable, by = "sp")
Census_2023_Finished <- merge(census2023, speciesTable, by = "sp")
#create latxlong & area for the plot
latlong <- c(-78.1454, 38.8935)
Hectares_measured <- 25.6
#######################################################################################################################################
#subset to alive stems
useCensus2008 <- Census_2008_Finished  %>% filter(DFstatus %in% "alive")
useCensus2013 <- Census_2013_Finished  %>% filter(DFstatus %in% "alive")
useCensus2018 <- Census_2018_Finished  %>% filter(DFstatus %in% "alive")
useCensus2023 <- Census_2023_Finished  %>% filter(DFstatus %in% "alive")
#calculate total biomass of census year by each stem
useCensus2008$Calculated_ABG <- get_biomass(dbh = as.numeric(useCensus2008$dbh)/10, genus = useCensus2008$Genus, species = useCensus2008$Species, coords = latlong)
useCensus2013$Calculated_ABG <- get_biomass(dbh = as.numeric(useCensus2013$dbh)/10, genus = useCensus2013$Genus, species = useCensus2013$Species, coords = latlong)
useCensus2018$Calculated_ABG <- get_biomass(dbh = as.numeric(useCensus2018$dbh)/10, genus = useCensus2018$Genus, species = useCensus2018$Species, coords = latlong)
useCensus2023$Calculated_ABG <- get_biomass(dbh = as.numeric(useCensus2023$dbh)/10, genus = useCensus2023$Genus, species = useCensus2023$Species, coords = latlong)
calc_quadrat_abg <- function(abg_df, year){
outdf <- abg_df  %>%
group_by(quadrat)  %>%
summarize(Abg_C_Mg = sum(Calculated_ABG,na.rm = T)/1000 * .47,
Abg_Mg = sum(Calculated_ABG,na.rm = T)/1000)  %>%
left_join(grouped_quadrats  %>% select(quadrat,Group))  %>%
mutate(Year = year)
return(outdf)
}
quadrat_abg_2008 <- calc_quadrat_abg(useCensus2008,2008)
quadrat_abg_2013 <- calc_quadrat_abg(useCensus2013,2013)
quadrat_abg_2018 <- calc_quadrat_abg(useCensus2018,2018)
quadrat_abg_2023 <- calc_quadrat_abg(useCensus2023,2023)
group_trends <- quadrat_abg_2008  %>%
bind_rows(quadrat_abg_2013,quadrat_abg_2018,quadrat_abg_2023)  %>%
group_by(Year,Group)  %>%
summarize(n_quads = n(),Abg_C_Mg_Ha = sum(Abg_C_Mg) / ((400 * n_quads)/10000),
Abg_Mg_Ha = sum(Abg_Mg) / ((400 * n_quads)/10000))  %>%
drop_na()  %>%
mutate(Group = as.character(Group))
tot_trends <- quadrat_abg_2008  %>%
bind_rows(quadrat_abg_2013,quadrat_abg_2018,quadrat_abg_2023)  %>%
group_by(Year)  %>%
summarize(n_quads = n(),Abg_C_Mg_Ha = sum(Abg_C_Mg) / ((400 * n_quads)/10000),
Abg_Mg_Ha = sum(Abg_Mg) / ((400 * n_quads)/10000))  %>%
mutate(Group = "Whole Plot")
figure2_agb <- group_trends  %>%
bind_rows(tot_trends)
########## Attempt at fixing overlapping legend ################################
colz <- c("#E7BC40","#C7622B", "#750000","#7e937f")
fig2 <- ggplot(figure2_agb, aes(y=Abg_C_Mg_Ha, x=Year,
group = Group, col = Group)) +
geom_line(aes(linetype = Group, linewidth = Group)) +
geom_point(aes(shape = Group, size = Group)) +
scale_x_continuous(breaks = c(2008, 2013,2018, 2023), labels = c("2008","2013","2018","2023"),
minor_breaks = c())+
scale_color_manual(name = element_blank(),labels = c("Low deer, low canopy vulnerability",
"High deer, low canopy vulnerability",
"High deer, high canopy vulnerability",
"Whole plot"),values = colz) +
scale_linetype_manual(values = c("dotted", "longdash", "longdash", "solid"), guide = "none") +
scale_linewidth_manual(values = c(1.2, 1.2, 1.2, 1.5), guide = "none") +
scale_size_manual(values = c(3, 3, 3, 3), guide = "none") +
scale_shape_manual(values = c("triangle", "triangle", "square", "circle"), guide = "none") +
labs(y = expression("Aboveground Biomass" ~ (Mg~C~ha^-1)), x = "Year") +
theme_bw() +
theme(legend.position = c(.38,.175),
legend.text = element_text(size = 18),
legend.background = element_blank(),
axis.text.x = element_text(size = 18, margin = margin(t = .15,r = 0, b = .05,l = 0,unit = "in")),
axis.text.y = element_text(size = 18, margin = margin(t = 0,r = .08, b = 0,l = 0, unit = "in")),
axis.title = element_text(size = 20))
fig2
################################################################################
#   geom_line(data = figure2_agb  %>% filter(Group %in% c("Whole Plot")), lwd = 1.5, lty = 1) +
#   geom_line(data = figure2_agb %>% filter(Group %in% c("2", "3")), lwd = 1.2, lty = 5) +
#   geom_line(data = figure2_agb %>% filter(Group %in% c("1")), lwd = 1.2, lty = 3) +
#   geom_point(data = figure2_agb %>% filter(Group %in% c("1")), pch = 25, cex = 3, fill = "#E7BC40") +
#   geom_point(data = figure2_agb %>% filter(Group %in% c("2")), pch = 25, cex = 3, fill = "#C7622B") +
#   geom_point(data = figure2_agb %>% filter(Group %in% c("3")), pch = 22, cex = 3, fill = "#750000") +
#   geom_point (data = figure2_agb %>% filter(Group %in% c("Whole Plot")), pch = 16, cex = 3, fill = "#7e937f") +
ggsave(fig2,filename = "doc/display/Figure2.jpeg", units = "in",
height = 5.75, width = 5, dpi = 300)
fig2 <- ggplot(figure2_agb, aes(y=Abg_C_Mg_Ha, x=Year,
group = Group, col = Group)) +
geom_line(aes(linetype = Group, linewidth = Group)) +
geom_point(aes(shape = Group, size = Group)) +
scale_x_continuous(breaks = c(2008, 2013,2018, 2023), labels = c("2008","2013","2018","2023"),
minor_breaks = c())+
scale_color_manual(name = element_blank(),labels = c("Low deer, low canopy vulnerability",
"High deer, low canopy vulnerability",
"High deer, high canopy vulnerability",
"Whole plot"),values = colz) +
scale_linetype_manual(values = c("dotted", "longdash", "longdash", "solid"), guide = "none") +
scale_linewidth_manual(values = c(1.2, 1.2, 1.2, 1.5), guide = "none") +
scale_size_manual(values = c(3, 3, 3, 3), guide = "none") +
scale_shape_manual(values = c("triangle", "triangle", "square", "circle"), guide = "none") +
labs(y = expression("Aboveground Biomass" ~ (Mg~C~ha^-1)), x = "Year") +
theme_bw() +
theme(legend.position = c(.38,.175),
legend.text = element_text(size = 12),
legend.background = element_blank(),
axis.text.x = element_text(size = 14, margin = margin(t = .15,r = 0, b = .05,l = 0,unit = "in")),
axis.text.y = element_text(size = 14, margin = margin(t = 0,r = .08, b = 0,l = 0, unit = "in")),
axis.title = element_text(size = 14))
fig2
################################################################################
#   geom_line(data = figure2_agb  %>% filter(Group %in% c("Whole Plot")), lwd = 1.5, lty = 1) +
#   geom_line(data = figure2_agb %>% filter(Group %in% c("2", "3")), lwd = 1.2, lty = 5) +
#   geom_line(data = figure2_agb %>% filter(Group %in% c("1")), lwd = 1.2, lty = 3) +
#   geom_point(data = figure2_agb %>% filter(Group %in% c("1")), pch = 25, cex = 3, fill = "#E7BC40") +
#   geom_point(data = figure2_agb %>% filter(Group %in% c("2")), pch = 25, cex = 3, fill = "#C7622B") +
#   geom_point(data = figure2_agb %>% filter(Group %in% c("3")), pch = 22, cex = 3, fill = "#750000") +
#   geom_point (data = figure2_agb %>% filter(Group %in% c("Whole Plot")), pch = 16, cex = 3, fill = "#7e937f") +
ggsave(fig2,filename = "doc/display/Figure2.jpeg", units = "in",
height = 5.75, width = 5, dpi = 300)
fig2 <- ggplot(figure2_agb, aes(y=Abg_C_Mg_Ha, x=Year,
group = Group, col = Group)) +
geom_line(aes(linetype = Group, linewidth = Group)) +
geom_point(aes(shape = Group, size = Group)) +
scale_x_continuous(breaks = c(2008, 2013,2018, 2023), labels = c("2008","2013","2018","2023"),
minor_breaks = c())+
scale_color_manual(name = element_blank(),labels = c("Low deer, low canopy vulnerability",
"High deer, low canopy vulnerability",
"High deer, high canopy vulnerability",
"Whole plot"),values = colz) +
scale_linetype_manual(values = c("dotted", "longdash", "longdash", "solid"), guide = "none") +
scale_linewidth_manual(values = c(1.2, 1.2, 1.2, 1.5), guide = "none") +
scale_size_manual(values = c(3, 3, 3, 3), guide = "none") +
scale_shape_manual(values = c("triangle", "triangle", "square", "circle"), guide = "none") +
labs(y = expression("Aboveground Biomass" ~ (Mg~C~ha^-1)), x = "Year") +
theme_bw() +
theme(legend.position = c(.38,.175),
legend.text = element_text(size = 12),
legend.background = element_blank(),
axis.text.x = element_text(size = 14, margin = margin(t = .15,r = 0, b = .05,l = 0,unit = "in")),
axis.text.y = element_text(size = 14, margin = margin(t = 0,r = .08, b = 0,l = 0, unit = "in")),
axis.title = element_text(size = 16))
fig2
ggsave(fig2,filename = "doc/display/Figure2.jpeg", units = "in",
height = 5.75, width = 5, dpi = 300)
fig2 <- ggplot(figure2_agb, aes(y=Abg_C_Mg_Ha, x=Year,
group = Group, col = Group)) +
geom_line(aes(linetype = Group, linewidth = Group)) +
geom_point(aes(shape = Group, size = Group)) +
scale_x_continuous(breaks = c(2008, 2013,2018, 2023), labels = c("2008","2013","2018","2023"),
minor_breaks = c())+
scale_color_manual(name = element_blank(),labels = c("Low deer, low canopy vulnerability",
"High deer, low canopy vulnerability",
"High deer, high canopy vulnerability",
"Whole plot"),values = colz) +
scale_linetype_manual(values = c("dotted", "longdash", "longdash", "solid"), guide = "none") +
scale_linewidth_manual(values = c(1.2, 1.2, 1.2, 1.5), guide = "none") +
scale_size_manual(values = c(3, 3, 3, 3), guide = "none") +
scale_shape_manual(values = c("triangle", "triangle", "square", "circle"), guide = "none") +
labs(y = expression("Aboveground Biomass" ~ (Mg~C~ha^-1)), x = "Year") +
theme_bw() +
theme(legend.position = c(.38,.175),
legend.text = element_text(size = 14),
legend.background = element_blank(),
axis.text.x = element_text(size = 14, margin = margin(t = .15,r = 0, b = .05,l = 0,unit = "in")),
axis.text.y = element_text(size = 14, margin = margin(t = 0,r = .08, b = 0,l = 0, unit = "in")),
axis.title = element_text(size = 16))
fig2
ggsave(fig2,filename = "doc/display/Figure2.jpeg", units = "in",
height = 5.75, width = 5, dpi = 300)
fig2 <- ggplot(figure2_agb, aes(y=Abg_C_Mg_Ha, x=Year,
group = Group, col = Group)) +
geom_line(aes(linetype = Group, linewidth = Group)) +
geom_point(aes(shape = Group, size = Group)) +
scale_x_continuous(breaks = c(2008, 2013,2018, 2023), labels = c("2008","2013","2018","2023"),
minor_breaks = c())+
scale_color_manual(name = element_blank(),labels = c("Low deer, low canopy vulnerability",
"High deer, low canopy vulnerability",
"High deer, high canopy vulnerability",
"Whole plot"),values = colz) +
scale_linetype_manual(values = c("dotted", "longdash", "longdash", "solid"), guide = "none") +
scale_linewidth_manual(values = c(1.2, 1.2, 1.2, 1.5), guide = "none") +
scale_size_manual(values = c(3, 3, 3, 3), guide = "none") +
scale_shape_manual(values = c("triangle", "triangle", "square", "circle"), guide = "none") +
labs(y = expression("Aboveground Biomass" ~ (Mg~C~ha^-1)), x = "Year") +
theme_bw() +
theme(legend.position = c(.38,.175),
legend.text = element_text(size = 13),
legend.background = element_blank(),
axis.text.x = element_text(size = 14, margin = margin(t = .15,r = 0, b = .05,l = 0,unit = "in")),
axis.text.y = element_text(size = 14, margin = margin(t = 0,r = .08, b = 0,l = 0, unit = "in")),
axis.title = element_text(size = 16))
fig2
ggsave(fig2,filename = "doc/display/Figure2.jpeg", units = "in",
height = 5.75, width = 5, dpi = 300)
save(figure2_agb,file = "doc/results-text/Figure2_textdata.Rdata")
fig2 <- ggplot(figure2_agb, aes(y=Abg_C_Mg_Ha, x=Year,
group = Group, col = Group)) +
geom_line(aes(linetype = Group, linewidth = Group)) +
geom_point(aes(shape = Group, size = Group)) +
scale_x_continuous(breaks = c(2008, 2013,2018, 2023), labels = c("2008","2013","2018","2023"),
minor_breaks = c())+
scale_color_manual(name = element_blank(),labels = c("Low deer, low canopy vulnerability",
"High deer, low canopy vulnerability",
"High deer, high canopy vulnerability",
"Whole plot"),values = colz) +
scale_linetype_manual(values = c("dotted", "longdash", "longdash", "solid"), guide = "none") +
scale_linewidth_manual(values = c(1.2, 1.2, 1.2, 1.5), guide = "none") +
scale_size_manual(values = c(3, 3, 3, 3), guide = "none") +
scale_shape_manual(values = c("triangle", "triangle", "square", "circle"), guide = "none") +
labs(y = expression("Aboveground Biomass" ~ (Mg~C~ha^-1)), x = "Year") +
theme_bw() +
theme(legend.position = c(.38,.175),
legend.text = element_text(size = 12),
legend.background = element_blank(),
axis.text.x = element_text(size = 14, margin = margin(t = .15,r = 0, b = .05,l = 0,unit = "in")),
axis.text.y = element_text(size = 14, margin = margin(t = 0,r = .08, b = 0,l = 0, unit = "in")),
axis.title = element_text(size = 16))
fig2
ggsave(fig2,filename = "doc/display/Figure2.jpeg", units = "in",
height = 5.75, width = 5, dpi = 300)
fig2 <- ggplot(figure2_agb, aes(y=Abg_C_Mg_Ha, x=Year,
group = Group, col = Group)) +
geom_line(aes(linetype = Group, linewidth = Group)) +
geom_point(aes(shape = Group, size = Group)) +
scale_x_continuous(breaks = c(2008, 2013,2018, 2023), labels = c("2008","2013","2018","2023"),
minor_breaks = c())+
scale_color_manual(name = element_blank(),labels = c("Low deer, low canopy vulnerability",
"High deer, low canopy vulnerability",
"High deer, high canopy vulnerability",
"Whole plot"),values = colz) +
scale_linetype_manual(values = c("dotted", "longdash", "longdash", "solid"), guide = "none") +
scale_linewidth_manual(values = c(1.2, 1.2, 1.2, 1.5), guide = "none") +
scale_size_manual(values = c(3, 3, 3, 3), guide = "none") +
scale_shape_manual(values = c("triangle", "triangle", "square", "circle"), guide = "none") +
labs(y = expression("Aboveground Biomass" ~ (Mg~C~ha^-1)), x = "Year") +
theme_bw() +
theme(legend.position = c(.38,.175),
legend.text = element_text(size = 12),
legend.background = element_blank(),
axis.text.x = element_text(size = 13, margin = margin(t = .15,r = 0, b = .05,l = 0,unit = "in")),
axis.text.y = element_text(size = 13, margin = margin(t = 0,r = .08, b = 0,l = 0, unit = "in")),
axis.title = element_text(size = 16))
fig2
fig2 <- ggplot(figure2_agb, aes(y=Abg_C_Mg_Ha, x=Year,
group = Group, col = Group)) +
geom_line(aes(linetype = Group, linewidth = Group)) +
geom_point(aes(shape = Group, size = Group)) +
scale_x_continuous(breaks = c(2008, 2013,2018, 2023), labels = c("2008","2013","2018","2023"),
minor_breaks = c())+
scale_color_manual(name = element_blank(),labels = c("Low deer, low canopy vulnerability",
"High deer, low canopy vulnerability",
"High deer, high canopy vulnerability",
"Whole plot"),values = colz) +
scale_linetype_manual(values = c("dotted", "longdash", "longdash", "solid"), guide = "none") +
scale_linewidth_manual(values = c(1.2, 1.2, 1.2, 1.5), guide = "none") +
scale_size_manual(values = c(3, 3, 3, 3), guide = "none") +
scale_shape_manual(values = c("triangle", "triangle", "square", "circle"), guide = "none") +
labs(y = expression("Aboveground Biomass" ~ (Mg~C~ha^-1)), x = "Year") +
theme_bw() +
theme(legend.position = c(.38,.175),
legend.text = element_text(size = 12),
legend.background = element_blank(),
axis.text.x = element_text(size = 13, margin = margin(t = .15,r = 0, b = .05,l = 0,unit = "in")),
axis.text.y = element_text(size = 13, margin = margin(t = 0,r = .08, b = 0,l = 0, unit = "in")),
axis.title = element_text(size = 15))
fig2
ggsave(fig2,filename = "doc/display/Figure2.jpeg", units = "in",
height = 5.75, width = 5, dpi = 300)
